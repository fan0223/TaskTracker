import { TMessageConsumeOptions, TMessageJSON, TQueueParams } from '../../../types';
import { MessageMetadata } from './message-metadata';
export declare class Message {
    static readonly MessagePriority: {
        LOWEST: number;
        VERY_LOW: number;
        LOW: number;
        NORMAL: number;
        ABOVE_NORMAL: number;
        HIGH: number;
        VERY_HIGH: number;
        HIGHEST: number;
    };
    protected static defaultConsumeOptions: TMessageConsumeOptions;
    protected readonly createdAt: number;
    protected queue: string | TQueueParams | null;
    protected ttl: number;
    protected retryThreshold: number;
    protected retryDelay: number;
    protected consumeTimeout: number;
    protected body: unknown;
    protected priority: number | null;
    protected scheduledCron: string | null;
    protected scheduledDelay: number | null;
    protected scheduledRepeatPeriod: number | null;
    protected scheduledRepeat: number;
    protected metadata: MessageMetadata | null;
    constructor();
    getMetadata(): MessageMetadata | null;
    getRequiredMetadata(): MessageMetadata;
    getSetMetadata(): MessageMetadata;
    getPublishedAt(): number | null;
    getScheduledAt(): number | null;
    getId(): string | null;
    getRequiredId(): string;
    getSetExpired(): boolean;
    setScheduledRepeatPeriod(period: number): Message;
    setScheduledDelay(delay: number): Message;
    setScheduledCRON(cron: string): Message;
    setScheduledRepeat(repeat: number): Message;
    setTTL(ttl: number): Message;
    setConsumeTimeout(timeout: number): Message;
    setRetryThreshold(threshold: number): Message;
    setRetryDelay(delay: number): Message;
    setBody(body: unknown): Message;
    setPriority(priority: number): Message;
    setQueue(queue: string | TQueueParams): Message;
    disablePriority(): Message;
    hasPriority(): boolean;
    getQueue(): TQueueParams | string | null;
    getRequiredQueue(): TQueueParams;
    getPriority(): number | null;
    getBody(): unknown;
    getTTL(): number;
    getRetryThreshold(): number;
    getRetryDelay(): number;
    getConsumeTimeout(): number;
    getCreatedAt(): number;
    getScheduledRepeat(): number;
    getScheduledRepeatPeriod(): number | null;
    getScheduledCRON(): string | null;
    getMessageScheduledDelay(): number | null;
    hasNextDelay(): boolean;
    getNextScheduledTimestamp(): number;
    toString(): string;
    toJSON(): TMessageJSON;
    hasRetryThresholdExceeded(): boolean;
    isSchedulable(): boolean;
    isPeriodic(): boolean;
    protected static validateRetryDelay(delay: number): number;
    protected static validateTTL(ttl: unknown): number;
    protected static validateConsumeTimeout(timeout: unknown): number;
    protected static validateRetryThreshold(threshold: unknown): number;
    static createFromMessage(message: string | Message, reset?: boolean): Message;
    static setDefaultConsumeOptions(consumeOptions: Partial<TMessageConsumeOptions>): void;
}
