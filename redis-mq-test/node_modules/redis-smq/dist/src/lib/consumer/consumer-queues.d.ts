import { TConsumerInfo, TQueueParams } from '../../../types';
import { RedisClient } from 'redis-smq-common';
import { ICallback, IRedisClientMulti } from 'redis-smq-common/dist/types';
export declare const consumerQueues: {
    removeConsumer(multi: IRedisClientMulti, queue: TQueueParams, consumerId: string): void;
    getQueueConsumers(client: RedisClient, queue: TQueueParams, transform: boolean, cb: ICallback<Record<string, TConsumerInfo | string>>): void;
    getQueueConsumerIds(client: RedisClient, queue: TQueueParams, cb: ICallback<string[]>): void;
    countQueueConsumers(client: RedisClient, queue: TQueueParams, cb: ICallback<number>): void;
    getConsumerQueues(client: RedisClient, consumerId: string, cb: ICallback<TQueueParams[]>): void;
};
