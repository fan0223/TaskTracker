import { IRequiredConfig, TQueueParams } from '../../../../types';
import { RedisClient } from 'redis-smq-common';
import { ICallback, IRedisClientMulti } from 'redis-smq-common/dist/types';
import { TRetryStatus } from './retry-message';
export declare type TCleanUpStatus = TRetryStatus | false;
export declare const processingQueue: {
    cleanUpProcessingQueue(config: IRequiredConfig, redisClient: RedisClient, consumerId: string, queue: TQueueParams, multi: IRedisClientMulti, cb: ICallback<TCleanUpStatus>): void;
    setUpProcessingQueue(multi: IRedisClientMulti, queue: TQueueParams, consumerId: string): void;
    getQueueProcessingQueues(redisClient: RedisClient, queue: TQueueParams, cb: ICallback<Record<string, string>>): void;
};
