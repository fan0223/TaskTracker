import { MessageHandler } from '../message-handler';
import { TConsumerMessageHandler, TQueueParams } from '../../../../../types';
import { Consumer } from '../../consumer';
import { RedisClient } from 'redis-smq-common';
import { ICallback, ICompatibleLogger } from 'redis-smq-common/dist/types';
export declare class MultiplexedMessageHandler extends MessageHandler {
    constructor(consumer: Consumer, queue: TQueueParams, handler: TConsumerMessageHandler, dequeueRedisClient: RedisClient, sharedRedisClient: RedisClient, logger: ICompatibleLogger);
    protected registerEventsHandlers(): void;
    shutdown(cb: ICallback<void>): void;
}
