import { Message } from '../../message/message';
import { EMessageUnacknowledgedCause } from '../../../../types';
import { MessageHandler } from './message-handler';
import { RedisClient } from 'redis-smq-common';
import { ICompatibleLogger } from 'redis-smq-common/dist/types';
export declare class ConsumeMessage {
    protected keyQueueProcessing: string;
    protected messageHandler: MessageHandler;
    protected redisClient: RedisClient;
    protected logger: ICompatibleLogger;
    constructor(messageHandler: MessageHandler, redisClient: RedisClient, logger: ICompatibleLogger);
    protected unacknowledgeMessage(msg: Message, cause: EMessageUnacknowledgedCause): void;
    protected consumeMessage(msg: Message): void;
    handleReceivedMessage(message: Message): void;
}
