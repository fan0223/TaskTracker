import { TGetMessagesReply, TQueueParams } from '../../../types';
import { SortedSet } from './message-storage/sorted-set';
import { RedisClient } from 'redis-smq-common';
import { ICallback } from 'redis-smq-common/dist/types';
export declare class PendingPriorityMessages extends SortedSet {
    delete(queue: string | TQueueParams, messageId: string, cb: ICallback<void>): void;
    purge(queue: string | TQueueParams, cb: ICallback<void>): void;
    list(queue: string | TQueueParams, skip: number, take: number, cb: ICallback<TGetMessagesReply>): void;
    static count(redisClient: RedisClient, queue: TQueueParams, cb: ICallback<number>): void;
    count(queue: string | TQueueParams, cb: ICallback<number>): void;
}
