"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DelayWorker = void 0;
const redis_keys_1 = require("../common/redis-keys/redis-keys");
const message_1 = require("../lib/message/message");
const redis_smq_common_1 = require("redis-smq-common");
const schedule_message_1 = require("../lib/producer/schedule-message");
class DelayWorker extends redis_smq_common_1.Worker {
    constructor(redisClient, managed) {
        super(managed);
        this.work = (cb) => {
            const { keyDelayedMessages } = redis_keys_1.redisKeys.getMainKeys();
            this.redisClient.lrange(keyDelayedMessages, 0, 99, (err, reply) => {
                if (err)
                    cb(err);
                else {
                    const messages = reply !== null && reply !== void 0 ? reply : [];
                    if (messages.length) {
                        const multi = this.redisClient.multi();
                        redis_smq_common_1.async.each(messages, (i, _, done) => {
                            multi.lrem(keyDelayedMessages, 1, i);
                            const message = message_1.Message.createFromMessage(i);
                            message.getRequiredMetadata().incrAttempts();
                            const delay = message.getRetryDelay();
                            message.getRequiredMetadata().setNextRetryDelay(delay);
                            (0, schedule_message_1.scheduleMessage)(multi, message);
                            done();
                        }, (err) => {
                            if (err)
                                cb(err);
                            else
                                multi.exec((err) => cb(err));
                        });
                    }
                    else
                        cb();
                }
            });
        };
        this.redisClient = redisClient;
        this.redisKeys = redis_keys_1.redisKeys.getMainKeys();
    }
}
exports.DelayWorker = DelayWorker;
exports.default = DelayWorker;
//# sourceMappingURL=delay.worker.js.map